from Bio import SeqIO
import re

match_pattern = re.compile(r"GTCGGTAAAACTCGTGCCAGC[ATCG]+CAAACTGGGATTAGATACCCCACTATG")
seq = 'AAAAGTTTGGTCCTGACTTTATTGTCGGCTTTAGCCCAATTTACACATGCAAGTATCCGCAACCCAGTGAAGATGCCCTCATCCCTCCTTCCGAGGGAGAGGAGCTGGTATCAGGCACTCCTGGTGCCCAAGACGCCTTGCTCAGCCACACCCCCAAGGGAATTCAGCAGTGATAGATATTGAGCCATTAACGCAAGTTGGACTCAGTTAGGGTTAAAAGGGTCGGTAAAACTCGTGCCAGCCACCGCGGTTATACGAGAGACCCTAGTTGACACCTTCGGCGTAAAGAGTGGTTATGGGAAAATCAACTGGAAAAGAACGCTTCTCTGGCCGTTATACGCTCCCGGACAGCGGAATCGCACACGCGAGCACCTCCACCCAAGTCTACCAGAAGCCACGATAGCCAGGGAACAAACTGGGATTAGATACCCCACTATGCCTGGCCCTAAACATTGATGTTACCACACAACATACATCCGCCTGGGTACTACGGGCATCAGCCTAAAACCCAAAGGACTTGGCGGTGTTTCAGACCCCCCTAGAGGAGCCTGTTCTAGAACCGATAATCCTCGTTTAACCTCACCATCCCTGGTCCAACCCGCCTATATACCGCCGTCGCCAGCTTACCCTGTGAAGGTATCATAGTAAGCAGAATGGGCACCGCCCAAAACGTCAGGTCGAGGTGTAGCGCACGGGGTGGGAAGAAATGGGCTACATTACCTGATGCAGGTAATACACGGACTGCTCGCTGAAAAAGAGCACGAAGGTGGATTTAGCAGTAAGGGGAAAATAGAGTGCCCCCCTGAAGCAGGCTCTGAAACGCGCACACACCGCCCGTCACTCTCCCCAAATAGTAATACATCCGGTTTTCAACGCAACACACACAACAAGGGGAGGCAAGTCGTAACACGGTAAGTGTACCGGAAGGTGCACTTGGAATAATC'
seq_mifish = match_pattern.search(seq)
print(seq_mifish.group())

# fasta_sequences = SeqIO.parse(open('./mifish_12s.fasta'),'fasta')
# for fasta in fasta_sequences:
#     name, seq = fasta.description, fasta.seq
#     seq_mifish = match_pattern.match(seq)
#     print(seq_mifish)